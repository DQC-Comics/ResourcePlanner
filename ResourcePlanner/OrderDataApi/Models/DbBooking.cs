// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.Rest;
using Newtonsoft.Json.Linq;
using OrderData.Models;

namespace OrderData.Models
{
    public partial class DbBooking
    {
        private double? _actualHours;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public double? ActualHours
        {
            get { return this._actualHours; }
            set { this._actualHours = value; }
        }
        
        private double? _customerHeroRating;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public double? CustomerHeroRating
        {
            get { return this._customerHeroRating; }
            set { this._customerHeroRating = value; }
        }
        
        private double? _customerRating;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public double? CustomerRating
        {
            get { return this._customerRating; }
            set { this._customerRating = value; }
        }
        
        private double? _customerRatingCount;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public double? CustomerRatingCount
        {
            get { return this._customerRatingCount; }
            set { this._customerRatingCount = value; }
        }
        
        private double? _debitHours;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public double? DebitHours
        {
            get { return this._debitHours; }
            set { this._debitHours = value; }
        }
        
        private string _description;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Description
        {
            get { return this._description; }
            set { this._description = value; }
        }
        
        private DateTimeOffset? _endTime;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public DateTimeOffset? EndTime
        {
            get { return this._endTime; }
            set { this._endTime = value; }
        }
        
        private IList<DbHero> _heroes;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<DbHero> Heroes
        {
            get { return this._heroes; }
            set { this._heroes = value; }
        }
        
        private double? _heroRating;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public double? HeroRating
        {
            get { return this._heroRating; }
            set { this._heroRating = value; }
        }
        
        private int? _id;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? Id
        {
            get { return this._id; }
            set { this._id = value; }
        }
        
        private string _location;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Location
        {
            get { return this._location; }
            set { this._location = value; }
        }
        
        private IList<DbSkill> _skills;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<DbSkill> Skills
        {
            get { return this._skills; }
            set { this._skills = value; }
        }
        
        private DateTimeOffset? _startTime;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public DateTimeOffset? StartTime
        {
            get { return this._startTime; }
            set { this._startTime = value; }
        }
        
        private double? _totalDebitPrice;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public double? TotalDebitPrice
        {
            get { return this._totalDebitPrice; }
            set { this._totalDebitPrice = value; }
        }
        
        private double? _totalInternalPrice;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public double? TotalInternalPrice
        {
            get { return this._totalInternalPrice; }
            set { this._totalInternalPrice = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the DbBooking class.
        /// </summary>
        public DbBooking()
        {
            this.Heroes = new LazyList<DbHero>();
            this.Skills = new LazyList<DbSkill>();
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken actualHoursValue = inputObject["ActualHours"];
                if (actualHoursValue != null && actualHoursValue.Type != JTokenType.Null)
                {
                    this.ActualHours = ((double)actualHoursValue);
                }
                JToken customerHeroRatingValue = inputObject["CustomerHeroRating"];
                if (customerHeroRatingValue != null && customerHeroRatingValue.Type != JTokenType.Null)
                {
                    this.CustomerHeroRating = ((double)customerHeroRatingValue);
                }
                JToken customerRatingValue = inputObject["CustomerRating"];
                if (customerRatingValue != null && customerRatingValue.Type != JTokenType.Null)
                {
                    this.CustomerRating = ((double)customerRatingValue);
                }
                JToken customerRatingCountValue = inputObject["CustomerRatingCount"];
                if (customerRatingCountValue != null && customerRatingCountValue.Type != JTokenType.Null)
                {
                    this.CustomerRatingCount = ((double)customerRatingCountValue);
                }
                JToken debitHoursValue = inputObject["DebitHours"];
                if (debitHoursValue != null && debitHoursValue.Type != JTokenType.Null)
                {
                    this.DebitHours = ((double)debitHoursValue);
                }
                JToken descriptionValue = inputObject["Description"];
                if (descriptionValue != null && descriptionValue.Type != JTokenType.Null)
                {
                    this.Description = ((string)descriptionValue);
                }
                JToken endTimeValue = inputObject["EndTime"];
                if (endTimeValue != null && endTimeValue.Type != JTokenType.Null)
                {
                    this.EndTime = ((DateTimeOffset)endTimeValue);
                }
                JToken heroesSequence = ((JToken)inputObject["Heroes"]);
                if (heroesSequence != null && heroesSequence.Type != JTokenType.Null)
                {
                    foreach (JToken heroesValue in ((JArray)heroesSequence))
                    {
                        DbHero dbHero = new DbHero();
                        dbHero.DeserializeJson(heroesValue);
                        this.Heroes.Add(dbHero);
                    }
                }
                JToken heroRatingValue = inputObject["HeroRating"];
                if (heroRatingValue != null && heroRatingValue.Type != JTokenType.Null)
                {
                    this.HeroRating = ((double)heroRatingValue);
                }
                JToken idValue = inputObject["Id"];
                if (idValue != null && idValue.Type != JTokenType.Null)
                {
                    this.Id = ((int)idValue);
                }
                JToken locationValue = inputObject["Location"];
                if (locationValue != null && locationValue.Type != JTokenType.Null)
                {
                    this.Location = ((string)locationValue);
                }
                JToken skillsSequence = ((JToken)inputObject["Skills"]);
                if (skillsSequence != null && skillsSequence.Type != JTokenType.Null)
                {
                    foreach (JToken skillsValue in ((JArray)skillsSequence))
                    {
                        DbSkill dbSkill = new DbSkill();
                        dbSkill.DeserializeJson(skillsValue);
                        this.Skills.Add(dbSkill);
                    }
                }
                JToken startTimeValue = inputObject["StartTime"];
                if (startTimeValue != null && startTimeValue.Type != JTokenType.Null)
                {
                    this.StartTime = ((DateTimeOffset)startTimeValue);
                }
                JToken totalDebitPriceValue = inputObject["TotalDebitPrice"];
                if (totalDebitPriceValue != null && totalDebitPriceValue.Type != JTokenType.Null)
                {
                    this.TotalDebitPrice = ((double)totalDebitPriceValue);
                }
                JToken totalInternalPriceValue = inputObject["TotalInternalPrice"];
                if (totalInternalPriceValue != null && totalInternalPriceValue.Type != JTokenType.Null)
                {
                    this.TotalInternalPrice = ((double)totalInternalPriceValue);
                }
            }
        }
        
        /// <summary>
        /// Serialize the object
        /// </summary>
        /// <returns>
        /// Returns the json model for the type DbBooking
        /// </returns>
        public virtual JToken SerializeJson(JToken outputObject)
        {
            if (outputObject == null)
            {
                outputObject = new JObject();
            }
            if (this.ActualHours != null)
            {
                outputObject["ActualHours"] = this.ActualHours.Value;
            }
            if (this.CustomerHeroRating != null)
            {
                outputObject["CustomerHeroRating"] = this.CustomerHeroRating.Value;
            }
            if (this.CustomerRating != null)
            {
                outputObject["CustomerRating"] = this.CustomerRating.Value;
            }
            if (this.CustomerRatingCount != null)
            {
                outputObject["CustomerRatingCount"] = this.CustomerRatingCount.Value;
            }
            if (this.DebitHours != null)
            {
                outputObject["DebitHours"] = this.DebitHours.Value;
            }
            if (this.Description != null)
            {
                outputObject["Description"] = this.Description;
            }
            if (this.EndTime != null)
            {
                outputObject["EndTime"] = this.EndTime.Value;
            }
            JArray heroesSequence = null;
            if (this.Heroes != null)
            {
                if (this.Heroes is ILazyCollection<DbHero> == false || ((ILazyCollection<DbHero>)this.Heroes).IsInitialized)
                {
                    heroesSequence = new JArray();
                    outputObject["Heroes"] = heroesSequence;
                    foreach (DbHero heroesItem in this.Heroes)
                    {
                        if (heroesItem != null)
                        {
                            heroesSequence.Add(heroesItem.SerializeJson(null));
                        }
                    }
                }
            }
            if (this.HeroRating != null)
            {
                outputObject["HeroRating"] = this.HeroRating.Value;
            }
            if (this.Id != null)
            {
                outputObject["Id"] = this.Id.Value;
            }
            if (this.Location != null)
            {
                outputObject["Location"] = this.Location;
            }
            JArray skillsSequence = null;
            if (this.Skills != null)
            {
                if (this.Skills is ILazyCollection<DbSkill> == false || ((ILazyCollection<DbSkill>)this.Skills).IsInitialized)
                {
                    skillsSequence = new JArray();
                    outputObject["Skills"] = skillsSequence;
                    foreach (DbSkill skillsItem in this.Skills)
                    {
                        if (skillsItem != null)
                        {
                            skillsSequence.Add(skillsItem.SerializeJson(null));
                        }
                    }
                }
            }
            if (this.StartTime != null)
            {
                outputObject["StartTime"] = this.StartTime.Value;
            }
            if (this.TotalDebitPrice != null)
            {
                outputObject["TotalDebitPrice"] = this.TotalDebitPrice.Value;
            }
            if (this.TotalInternalPrice != null)
            {
                outputObject["TotalInternalPrice"] = this.TotalInternalPrice.Value;
            }
            return outputObject;
        }
    }
}
