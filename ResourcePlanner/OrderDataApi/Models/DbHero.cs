// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.Rest;
using Newtonsoft.Json.Linq;
using OrderData.Models;

namespace OrderData.Models
{
    public partial class DbHero
    {
        private IList<DbBooking> _bookings;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<DbBooking> Bookings
        {
            get { return this._bookings; }
            set { this._bookings = value; }
        }
        
        private string _color;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Color
        {
            get { return this._color; }
            set { this._color = value; }
        }
        
        private double? _debitPrice;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public double? DebitPrice
        {
            get { return this._debitPrice; }
            set { this._debitPrice = value; }
        }
        
        private string _description;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Description
        {
            get { return this._description; }
            set { this._description = value; }
        }
        
        private int? _id;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? Id
        {
            get { return this._id; }
            set { this._id = value; }
        }
        
        private string _imageUrl;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string ImageUrl
        {
            get { return this._imageUrl; }
            set { this._imageUrl = value; }
        }
        
        private double? _internalPrice;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public double? InternalPrice
        {
            get { return this._internalPrice; }
            set { this._internalPrice = value; }
        }
        
        private string _name;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Name
        {
            get { return this._name; }
            set { this._name = value; }
        }
        
        private double? _rating;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public double? Rating
        {
            get { return this._rating; }
            set { this._rating = value; }
        }
        
        private double? _ratingCount;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public double? RatingCount
        {
            get { return this._ratingCount; }
            set { this._ratingCount = value; }
        }
        
        private IList<DbHeroSkill> _skills;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<DbHeroSkill> Skills
        {
            get { return this._skills; }
            set { this._skills = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the DbHero class.
        /// </summary>
        public DbHero()
        {
            this.Bookings = new LazyList<DbBooking>();
            this.Skills = new LazyList<DbHeroSkill>();
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken bookingsSequence = ((JToken)inputObject["Bookings"]);
                if (bookingsSequence != null && bookingsSequence.Type != JTokenType.Null)
                {
                    foreach (JToken bookingsValue in ((JArray)bookingsSequence))
                    {
                        DbBooking dbBooking = new DbBooking();
                        dbBooking.DeserializeJson(bookingsValue);
                        this.Bookings.Add(dbBooking);
                    }
                }
                JToken colorValue = inputObject["Color"];
                if (colorValue != null && colorValue.Type != JTokenType.Null)
                {
                    this.Color = ((string)colorValue);
                }
                JToken debitPriceValue = inputObject["DebitPrice"];
                if (debitPriceValue != null && debitPriceValue.Type != JTokenType.Null)
                {
                    this.DebitPrice = ((double)debitPriceValue);
                }
                JToken descriptionValue = inputObject["Description"];
                if (descriptionValue != null && descriptionValue.Type != JTokenType.Null)
                {
                    this.Description = ((string)descriptionValue);
                }
                JToken idValue = inputObject["Id"];
                if (idValue != null && idValue.Type != JTokenType.Null)
                {
                    this.Id = ((int)idValue);
                }
                JToken imageUrlValue = inputObject["ImageUrl"];
                if (imageUrlValue != null && imageUrlValue.Type != JTokenType.Null)
                {
                    this.ImageUrl = ((string)imageUrlValue);
                }
                JToken internalPriceValue = inputObject["InternalPrice"];
                if (internalPriceValue != null && internalPriceValue.Type != JTokenType.Null)
                {
                    this.InternalPrice = ((double)internalPriceValue);
                }
                JToken nameValue = inputObject["Name"];
                if (nameValue != null && nameValue.Type != JTokenType.Null)
                {
                    this.Name = ((string)nameValue);
                }
                JToken ratingValue = inputObject["Rating"];
                if (ratingValue != null && ratingValue.Type != JTokenType.Null)
                {
                    this.Rating = ((double)ratingValue);
                }
                JToken ratingCountValue = inputObject["RatingCount"];
                if (ratingCountValue != null && ratingCountValue.Type != JTokenType.Null)
                {
                    this.RatingCount = ((double)ratingCountValue);
                }
                JToken skillsSequence = ((JToken)inputObject["Skills"]);
                if (skillsSequence != null && skillsSequence.Type != JTokenType.Null)
                {
                    foreach (JToken skillsValue in ((JArray)skillsSequence))
                    {
                        DbHeroSkill dbHeroSkill = new DbHeroSkill();
                        dbHeroSkill.DeserializeJson(skillsValue);
                        this.Skills.Add(dbHeroSkill);
                    }
                }
            }
        }
        
        /// <summary>
        /// Serialize the object
        /// </summary>
        /// <returns>
        /// Returns the json model for the type DbHero
        /// </returns>
        public virtual JToken SerializeJson(JToken outputObject)
        {
            if (outputObject == null)
            {
                outputObject = new JObject();
            }
            JArray bookingsSequence = null;
            if (this.Bookings != null)
            {
                if (this.Bookings is ILazyCollection<DbBooking> == false || ((ILazyCollection<DbBooking>)this.Bookings).IsInitialized)
                {
                    bookingsSequence = new JArray();
                    outputObject["Bookings"] = bookingsSequence;
                    foreach (DbBooking bookingsItem in this.Bookings)
                    {
                        if (bookingsItem != null)
                        {
                            bookingsSequence.Add(bookingsItem.SerializeJson(null));
                        }
                    }
                }
            }
            if (this.Color != null)
            {
                outputObject["Color"] = this.Color;
            }
            if (this.DebitPrice != null)
            {
                outputObject["DebitPrice"] = this.DebitPrice.Value;
            }
            if (this.Description != null)
            {
                outputObject["Description"] = this.Description;
            }
            if (this.Id != null)
            {
                outputObject["Id"] = this.Id.Value;
            }
            if (this.ImageUrl != null)
            {
                outputObject["ImageUrl"] = this.ImageUrl;
            }
            if (this.InternalPrice != null)
            {
                outputObject["InternalPrice"] = this.InternalPrice.Value;
            }
            if (this.Name != null)
            {
                outputObject["Name"] = this.Name;
            }
            if (this.Rating != null)
            {
                outputObject["Rating"] = this.Rating.Value;
            }
            if (this.RatingCount != null)
            {
                outputObject["RatingCount"] = this.RatingCount.Value;
            }
            JArray skillsSequence = null;
            if (this.Skills != null)
            {
                if (this.Skills is ILazyCollection<DbHeroSkill> == false || ((ILazyCollection<DbHeroSkill>)this.Skills).IsInitialized)
                {
                    skillsSequence = new JArray();
                    outputObject["Skills"] = skillsSequence;
                    foreach (DbHeroSkill skillsItem in this.Skills)
                    {
                        if (skillsItem != null)
                        {
                            skillsSequence.Add(skillsItem.SerializeJson(null));
                        }
                    }
                }
            }
            return outputObject;
        }
    }
}
